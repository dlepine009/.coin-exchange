{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/Header/logo.svg","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Section","styled","section","AccountBalance","props","buttonText","showBalance","balance","amount","onClick","handleToggleShowBalance","Td","td","Coin","name","ticker","price","action","method","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","AppLogo","img","HeaderApp","header","H1","h1","Header","src","logo","alt","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","useEffect","length","valueChangeId","tickerUrl","newPrice","USD","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4c36904.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\n\nconst Section = styled.section`\n    \n    font-size: 2rem;\n    text-align: left;\n    padding: 1.5rem 0 1.5rem 5rem;\n\n`;\n\n\nexport default function AccountBalance(props) {\n\n\n    const buttonText = props.showBalance ?\n        'Hide Balance' : 'Show Balance';\n\n    let balance = props.showBalance ?\n        <span>Balance: ${props.amount} </span>\n        : null\n\n\n    return (\n        <Section>\n            {balance}\n            <button onClick={props.handleToggleShowBalance}>{buttonText}</button>\n        </Section>\n    );\n}\n\n\n\n\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n    font-size: 1.5rem;\n    border: 1px solid #cccccc;\n    width: 25vh;\n`;\n\nexport default function Coin(props) {\n\n\n    const handleClick = (event) => {\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n\n        props.handleRefresh(props.tickerId);\n    }\n    const balance = props.showBalance ?\n        <Td>{props.balance} </Td> : null\n    return (\n        <tr>\n            <Td>{props.name}</Td>\n            <Td>{props.ticker}</Td>\n            <Td>${props.price}</Td>\n            {balance}\n            <Td>\n                <form action=\"#\" method=\"POST\">\n                    <button onClick={handleClick}>Refresh</button>\n                </form>\n            </Td>\n        </tr >\n    )\n}\n\n\nCoin.propTypes = {\n    name: PropTypes.string.isRequired,\n    ticker: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n}\n","import React from 'react'\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\n\n\n\n\n\nconst Table = styled.table`\nmargin: 50px auto 50px auto;\ndisplay: inline - block;\nfont - size: 1.4rem;\n`\n\n\nexport default function CoinList(props) {\n\n    const balance = props.showBalance ?\n        <th>Balance</th> : null;\n    return (\n        <div>\n            <Table>\n                <thead>\n                    <tr>\n                        <th> Name </th>\n                        <th> Ticker </th>\n                        <th> Price </th>\n                        {balance}\n                        <th> Actions </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        props.coinData.map(({ key, name, ticker, price, balance, tickerId }) =>\n                            <Coin key={key}\n                                handleRefresh={props.handleRefresh}\n                                name={name}\n                                ticker={ticker}\n                                balance={balance}\n                                showBalance={props.showBalance}\n                                price={price}\n                                tickerId={key} />)\n                    }\n\n\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport styled from 'styled-components';\n\n\n\n\n\nconst AppLogo = styled.img`\n    height: 8rem;\n    pointer - events: none;     \n`;\n\nconst HeaderApp = styled.header`\n    background - color: #282c34;\n    min - height: 20vh;\n    display: flex;\n    flex - direction: row;\n    align - items: center;\n    justify - content: flex - start;\n    color: white;\n`;\n\nconst H1 = styled.h1`\n    font - size: 4rem;\n`;\n\n\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div>\n                <HeaderApp>\n                    <AppLogo src={logo} alt=\"React logo\" />\n\n                    <H1>\n                        Coin Exchange\n                    </H1>\n                </HeaderApp>\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport AccountBalance from './components/AccountBalance/AccountBalance.jsx';\nimport CoinList from './components/CoinList/CoinList';\nimport Header from './components/Header/Header';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n\nconst Div = styled.div`\n    text-align: center;\n    background-color: rgb(113, 113, 199);\n    color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst coinsUrl = 'https://api.coinpaprika.com/v1/coins';\nconst tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\n\n\nfunction App(props) {\n\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get(coinsUrl);\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function (response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes['USD'].price),\n      };\n    })\n    //Retrieve the prices\n    setCoinData(coinPriceData);\n  };\n\n  useEffect(function () {\n    if (coinData.length === 0) {\n      componentDidMount();\n\n    }\n  });\n\n\n\n\n\n\n\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    debugger;\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map(function (values) {\n      let newValues = { ...values };\n      if (valueChangeId === values.key) {\n\n        newValues.price = newPrice;\n      };\n      return newValues;\n\n    });\n    setCoinData(newCoinData);\n  }\n  const handleToggleShowBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  return (\n    <Div>\n      <Header />\n      <AccountBalance\n        amount={balance}\n        showBalance={showBalance}\n        handleToggleShowBalance={handleToggleShowBalance} />\n      <CoinList\n        coinData={coinData}\n        handleRefresh={handleRefresh}\n        showBalance={showBalance} />\n    </Div>\n  );\n\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}